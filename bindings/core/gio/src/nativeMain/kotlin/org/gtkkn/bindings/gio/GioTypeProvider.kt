// This is a generated file. Do not modify.
// Copyright (c) 2025 gtk-kn
// SPDX-License-Identifier: LGPL-2.1-or-later
package org.gtkkn.bindings.gio

import org.gtkkn.extensions.gobject.KGType
import org.gtkkn.extensions.gobject.TypeProvider
import kotlin.collections.Map
import kotlin.reflect.KClass

public object GioTypeProvider : TypeProvider {
    override val typeMap: Map<KClass<*>, KGType<*>> = mapOf(
        AppInfoMonitor::class to AppInfoMonitor.type,
        AppLaunchContext::class to AppLaunchContext.type,
        Application::class to Application.type,
        ApplicationCommandLine::class to ApplicationCommandLine.type,
        BufferedInputStream::class to BufferedInputStream.type,
        BufferedOutputStream::class to BufferedOutputStream.type,
        BytesIcon::class to BytesIcon.type,
        Cancellable::class to Cancellable.type,
        CharsetConverter::class to CharsetConverter.type,
        ConverterInputStream::class to ConverterInputStream.type,
        ConverterOutputStream::class to ConverterOutputStream.type,
        Credentials::class to Credentials.type,
        DBusActionGroup::class to DBusActionGroup.type,
        DBusAuthObserver::class to DBusAuthObserver.type,
        DBusConnection::class to DBusConnection.type,
        DBusInterfaceSkeleton::class to DBusInterfaceSkeleton.type,
        DBusMenuModel::class to DBusMenuModel.type,
        DBusMessage::class to DBusMessage.type,
        DBusMethodInvocation::class to DBusMethodInvocation.type,
        DBusObjectManagerClient::class to DBusObjectManagerClient.type,
        DBusObjectManagerServer::class to DBusObjectManagerServer.type,
        DBusObjectProxy::class to DBusObjectProxy.type,
        DBusObjectSkeleton::class to DBusObjectSkeleton.type,
        DBusProxy::class to DBusProxy.type,
        DBusServer::class to DBusServer.type,
        DataInputStream::class to DataInputStream.type,
        DataOutputStream::class to DataOutputStream.type,
        DebugControllerDBus::class to DebugControllerDBus.type,
        DesktopAppInfo::class to DesktopAppInfo.type,
        Emblem::class to Emblem.type,
        EmblemedIcon::class to EmblemedIcon.type,
        FileEnumerator::class to FileEnumerator.type,
        FileIoStream::class to FileIoStream.type,
        FileIcon::class to FileIcon.type,
        FileInfo::class to FileInfo.type,
        FileInputStream::class to FileInputStream.type,
        FileMonitor::class to FileMonitor.type,
        FileOutputStream::class to FileOutputStream.type,
        FilenameCompleter::class to FilenameCompleter.type,
        FilterInputStream::class to FilterInputStream.type,
        FilterOutputStream::class to FilterOutputStream.type,
        IoModule::class to IoModule.type,
        IoStream::class to IoStream.type,
        InetAddress::class to InetAddress.type,
        InetAddressMask::class to InetAddressMask.type,
        InetSocketAddress::class to InetSocketAddress.type,
        InputStream::class to InputStream.type,
        ListStore::class to ListStore.type,
        MemoryInputStream::class to MemoryInputStream.type,
        MemoryOutputStream::class to MemoryOutputStream.type,
        Menu::class to Menu.type,
        MenuAttributeIter::class to MenuAttributeIter.type,
        MenuItem::class to MenuItem.type,
        MenuLinkIter::class to MenuLinkIter.type,
        MenuModel::class to MenuModel.type,
        MountOperation::class to MountOperation.type,
        NativeSocketAddress::class to NativeSocketAddress.type,
        NativeVolumeMonitor::class to NativeVolumeMonitor.type,
        NetworkAddress::class to NetworkAddress.type,
        NetworkService::class to NetworkService.type,
        Notification::class to Notification.type,
        OutputStream::class to OutputStream.type,
        Permission::class to Permission.type,
        PropertyAction::class to PropertyAction.type,
        ProxyAddress::class to ProxyAddress.type,
        ProxyAddressEnumerator::class to ProxyAddressEnumerator.type,
        Resolver::class to Resolver.type,
        Settings::class to Settings.type,
        SettingsBackend::class to SettingsBackend.type,
        SimpleAction::class to SimpleAction.type,
        SimpleActionGroup::class to SimpleActionGroup.type,
        SimpleAsyncResult::class to SimpleAsyncResult.type,
        SimpleIoStream::class to SimpleIoStream.type,
        SimplePermission::class to SimplePermission.type,
        SimpleProxyResolver::class to SimpleProxyResolver.type,
        Socket::class to Socket.type,
        SocketAddress::class to SocketAddress.type,
        SocketAddressEnumerator::class to SocketAddressEnumerator.type,
        SocketClient::class to SocketClient.type,
        SocketConnection::class to SocketConnection.type,
        SocketControlMessage::class to SocketControlMessage.type,
        SocketListener::class to SocketListener.type,
        SocketService::class to SocketService.type,
        Subprocess::class to Subprocess.type,
        SubprocessLauncher::class to SubprocessLauncher.type,
        Task::class to Task.type,
        TcpConnection::class to TcpConnection.type,
        TcpWrapperConnection::class to TcpWrapperConnection.type,
        TestDBus::class to TestDBus.type,
        ThemedIcon::class to ThemedIcon.type,
        ThreadedSocketService::class to ThreadedSocketService.type,
        TlsCertificate::class to TlsCertificate.type,
        TlsConnection::class to TlsConnection.type,
        TlsDatabase::class to TlsDatabase.type,
        TlsInteraction::class to TlsInteraction.type,
        TlsPassword::class to TlsPassword.type,
        UnixConnection::class to UnixConnection.type,
        UnixCredentialsMessage::class to UnixCredentialsMessage.type,
        UnixFdList::class to UnixFdList.type,
        UnixFdMessage::class to UnixFdMessage.type,
        UnixInputStream::class to UnixInputStream.type,
        UnixMountMonitor::class to UnixMountMonitor.type,
        UnixOutputStream::class to UnixOutputStream.type,
        UnixSocketAddress::class to UnixSocketAddress.type,
        Vfs::class to Vfs.type,
        VolumeMonitor::class to VolumeMonitor.type,
        ZlibCompressor::class to ZlibCompressor.type,
        ZlibDecompressor::class to ZlibDecompressor.type,
        Action::class to Action.type,
        ActionGroup::class to ActionGroup.type,
        ActionMap::class to ActionMap.type,
        AppInfo::class to AppInfo.type,
        AsyncInitable::class to AsyncInitable.type,
        AsyncResult::class to AsyncResult.type,
        Converter::class to Converter.type,
        DBusInterface::class to DBusInterface.type,
        DBusObject::class to DBusObject.type,
        DBusObjectManager::class to DBusObjectManager.type,
        DatagramBased::class to DatagramBased.type,
        DebugController::class to DebugController.type,
        DesktopAppInfoLookup::class to DesktopAppInfoLookup.type,
        Drive::class to Drive.type,
        DtlsClientConnection::class to DtlsClientConnection.type,
        DtlsConnection::class to DtlsConnection.type,
        DtlsServerConnection::class to DtlsServerConnection.type,
        File::class to File.type,
        FileDescriptorBased::class to FileDescriptorBased.type,
        Icon::class to Icon.type,
        Initable::class to Initable.type,
        ListModel::class to ListModel.type,
        LoadableIcon::class to LoadableIcon.type,
        MemoryMonitor::class to MemoryMonitor.type,
        Mount::class to Mount.type,
        NetworkMonitor::class to NetworkMonitor.type,
        PollableInputStream::class to PollableInputStream.type,
        PollableOutputStream::class to PollableOutputStream.type,
        PowerProfileMonitor::class to PowerProfileMonitor.type,
        Proxy::class to Proxy.type,
        ProxyResolver::class to ProxyResolver.type,
        RemoteActionGroup::class to RemoteActionGroup.type,
        Seekable::class to Seekable.type,
        SocketConnectable::class to SocketConnectable.type,
        TlsBackend::class to TlsBackend.type,
        TlsClientConnection::class to TlsClientConnection.type,
        TlsFileDatabase::class to TlsFileDatabase.type,
        TlsServerConnection::class to TlsServerConnection.type,
        Volume::class to Volume.type,
    )
}
